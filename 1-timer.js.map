{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateTimePicker = document.querySelector('#datetime-picker');\nlet userSelectedDate = null;\nconst startButton = document.querySelector('button[data-start]');\nstartButton.disabled = true;\n\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: `Please choose a date in the future`,\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nflatpickr('#datetime-picker', options);\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n\n  const timeInterval = setInterval(() => {\n    const timeLeft = userSelectedDate - new Date();\n\n    if (timeLeft <= 0) {\n      clearInterval(timeInterval);\n\n      iziToast.success({\n        title: 'Success',\n        message: 'The countdown is complete!',\n      });\n      dateTimePicker.disabled = false;\n      return;\n    }\n\n    timeCalculator(convertMs(timeLeft));\n  }, 1000);\n});\n\nfunction timeCalculator({ days, hours, minutes, seconds }) {\n  dataDays.textContent = addLeadingZero(days);\n  dataHours.textContent = addLeadingZero(hours);\n  dataMinutes.textContent = addLeadingZero(minutes);\n  dataSeconds.textContent = addLeadingZero(seconds);\n}\n"],"names":["dateTimePicker","userSelectedDate","startButton","dataDays","dataHours","dataMinutes","dataSeconds","options","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","flatpickr","timeInterval","timeLeft","timeCalculator"],"mappings":"0IAKA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAChE,IAAIC,EAAmB,KACvB,MAAMC,EAAc,SAAS,cAAc,oBAAoB,EAC/DA,EAAY,SAAW,GAEvB,MAAMC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAErDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBP,EAAmBO,EAAc,CAAC,EAE9BP,GAAoB,IAAI,MAC1BQ,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDP,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEA,SAASQ,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAC,EAAU,mBAAoBX,CAAO,EAErCL,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBF,EAAe,SAAW,GAE1B,MAAMmB,EAAe,YAAY,IAAM,CACrC,MAAMC,EAAWnB,EAAmB,IAAI,KAExC,GAAImB,GAAY,EAAG,CACjB,cAAcD,CAAY,EAE1BV,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,4BACjB,CAAO,EACDT,EAAe,SAAW,GAC1B,MACD,CAEDqB,EAAeX,EAAUU,CAAQ,CAAC,CACnC,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAe,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACzDZ,EAAS,YAAca,EAAeJ,CAAI,EAC1CR,EAAU,YAAcY,EAAeH,CAAK,EAC5CR,EAAY,YAAcW,EAAeF,CAAO,EAChDR,EAAY,YAAcU,EAAeD,CAAO,CAClD"}